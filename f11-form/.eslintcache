[{"C:\\Users\\PiotrKalucki\\Desktop\\rekrutacja\\f11-form\\src\\index.js":"1","C:\\Users\\PiotrKalucki\\Desktop\\rekrutacja\\f11-form\\src\\reportWebVitals.js":"2","C:\\Users\\PiotrKalucki\\Desktop\\rekrutacja\\f11-form\\src\\App.js":"3","C:\\Users\\PiotrKalucki\\Desktop\\rekrutacja\\f11-form\\src\\components\\form.js":"4","C:\\Users\\PiotrKalucki\\Desktop\\rekrutacja\\f11-form\\src\\i18n.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":261,"mtime":1608632781263,"results":"9","hashOfConfig":"7"},{"size":11623,"mtime":1608633259126,"results":"10","hashOfConfig":"7"},{"size":414,"mtime":1608588352072,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1pxpqu4",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\PiotrKalucki\\Desktop\\rekrutacja\\f11-form\\src\\index.js",[],["24","25"],"C:\\Users\\PiotrKalucki\\Desktop\\rekrutacja\\f11-form\\src\\reportWebVitals.js",[],"C:\\Users\\PiotrKalucki\\Desktop\\rekrutacja\\f11-form\\src\\App.js",[],"C:\\Users\\PiotrKalucki\\Desktop\\rekrutacja\\f11-form\\src\\components\\form.js",["26"],"import React, {useState} from 'react';\r\nimport \"bulma/css/bulma.css\";\r\nimport '../styles/form.scss';\r\nimport {useFormik} from 'formik';\r\nimport {BiEnvelope} from 'react-icons/bi';\r\nimport {IoMdSend, IoMdPerson} from 'react-icons/io';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nconst Form = () => {\r\n    const {t, i18n} = useTranslation();\r\n    const [activeLanguage, setActiveLanguage] = useState('GB');\r\n    const onLanguageChange = (e) => {\r\n        i18n.changeLanguage(e.target.id).then(() => console.log(i18n));\r\n        setActiveLanguage(e.target.id);\r\n        formik.resetForm({});\r\n    }\r\n    const [sentMsgVisible, setSentMsgVisible] = useState(false);\r\n    const handleCloseWindow = () => {\r\n        setSentMsgVisible(!sentMsgVisible);\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.name) {\r\n            errors.name = t('Required');\r\n        }\r\n\r\n        if (!values.message) {\r\n            errors.message = t('Required');\r\n        }\r\n        if (!values.email) {\r\n            errors.email = t('Required');\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n            errors.email = t('Invalid Email');\r\n        }\r\n        if (!values.topic) {\r\n            errors.topic = t('Required');\r\n        }\r\n        if (values.topic === t('Software errors') && !values.version) {\r\n            errors.version = t('Required');\r\n        } else if (values.topic === t('Software errors') && values.version && (!/(?!\\.)(\\d+(\\.\\d+)+)(?![\\d\\.])/g.test(values.version))) {\r\n            errors.version = t('Wrong Format');\r\n        }\r\n        if (values.topic === t('Return call') && !values.telephone) {\r\n            errors.telephone = t('Required');\r\n        }\r\n        if (!values.topic) {\r\n            errors.topic = t('Required');\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            name: '',\r\n            message: '',\r\n            topic: '',\r\n            version: '',\r\n            telephone: ''\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            // Normally onSubmit would be a fetch to an endpoint sending the formular, since there is none specified\r\n            // I'am just showing the payload in an Alert, to show that all the data is correctly sent.\r\n            alert(JSON.stringify(values, null, 2));\r\n            formik.resetForm({});\r\n            setSentMsgVisible(true);\r\n        },\r\n    });\r\n    const customHandleChange = (e) => {\r\n        formik.handleChange(e);\r\n        formik.setFieldValue('version', '')\r\n        formik.setErrors({\"version\": ''})\r\n        formik.setFieldValue('telephone', '')\r\n        formik.setErrors({\"telephone\": ''})\r\n\r\n    }\r\n    return (\r\n        <div className=\"wrapper\">\r\n                <div className=\"flags-container\">\r\n                    <img\r\n                        onClick={(e) => onLanguageChange(e)}\r\n                        id=\"GB\"\r\n                        className={`flag-icon ${activeLanguage === \"GB\" ? \"active-lang\" : \"inactive-lang\"}`}\r\n                        alt=\"English\"\r\n                        title=\"English\"\r\n                        src=\"http://purecatamphetamine.github.io/country-flag-icons/3x2/GB.svg\"/>\r\n                    <img\r\n                        onClick={(e) => onLanguageChange(e)}\r\n                        id=\"DE\"\r\n                        title=\"Deutsch\"\r\n                        className={`flag-icon ${activeLanguage === \"DE\" ? \"active-lang\" : \"inactive-lang\"}`}\r\n                        alt=\"Deutsch\"\r\n                        src=\"http://purecatamphetamine.github.io/country-flag-icons/3x2/DE.svg\"/>\r\n                </div>\r\n            {sentMsgVisible && <div className=\"notification succes-bar is-success\">\r\n                <button onClick={handleCloseWindow} className=\"delete\"></button>\r\n                {t('Request sent')}\r\n            </div>}\r\n            <div className=\"main-form-container\">\r\n                <h1 className=\"title is-bold\">{t('Form')}</h1>\r\n                <span className=\"subtitle support-sub\">{t('Support')}</span>\r\n                <form onSubmit={formik.handleSubmit} className=\"form-wrapper\" action=\"/thanks\">\r\n                    <div className=\"field\">\r\n                        <label className=\"label\" htmlFor=\"name\">{t('Name')}</label>\r\n                        <div className=\"control has-icons-left\">\r\n                            <input id=\"name\"\r\n                                   name=\"name\"\r\n                                   type=\"text\"\r\n                                   onBlur={formik.handleBlur}\r\n                                   onChange={formik.handleChange}\r\n                                   value={formik.values.name}\r\n                                   className={`input ${formik.touched.name && formik.errors.name ? 'is-danger' : ''}`}\r\n                                   placeholder={t('Example').concat(\" John Malkovic\")}/>\r\n                            <span className=\"icon is-small is-left\">\r\n                            <IoMdPerson size={24}/>\r\n                            </span>\r\n                        </div>\r\n                        {formik.touched.name && formik.errors.name ?\r\n                            <span className=\"help is-danger error-msg\">{formik.errors.name}</span> : null}\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label className=\"label\" htmlFor=\"email\">{t('Email')}</label>\r\n                        <div className=\"control has-icons-left\">\r\n                            <input id=\"email\"\r\n                                   name=\"email\"\r\n                                   type=\"email\"\r\n                                   className={`input ${formik.touched.email && formik.errors.email ? 'is-danger' : ''}`}\r\n                                   placeholder={t('Example').concat(\" john@malkovic.com\")}\r\n                                   onBlur={formik.handleBlur}\r\n                                   onChange={formik.handleChange}\r\n                                   value={formik.values.email}/>\r\n                            <span className=\"icon is-small is-left\">\r\n                            <BiEnvelope size={24}/>\r\n                        </span>\r\n                        </div>\r\n                        {formik.touched.email && formik.errors.email ?\r\n                            <span className=\"help is-danger error-msg\">{formik.errors.email}</span> : null}\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label className=\"label\" htmlFor=\"topic\">{t('Topic')}</label>\r\n                        <div className=\"control\">\r\n                            <div className={`select ${formik.touched.topic && formik.errors.topic ? 'is-danger' : ''}`}>\r\n                                <select name=\"topic\"\r\n                                        value={formik.values.topic}\r\n                                        onChange={(e) => customHandleChange(e)}\r\n                                        onBlur={formik.handleBlur}\r\n                                >\r\n                                    <option value=\"\">{t('Choose Topic')}</option>\r\n                                    <option>{t('Software errors')}</option>\r\n                                    <option>{t('General')}</option>\r\n                                    <option>{t('Return call')}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        {formik.touched.topic && formik.errors.topic ?\r\n                            <span className=\"help is-danger error-msg\">{formik.errors.topic}</span> : null}\r\n                    </div>\r\n\r\n\r\n                    {(formik.values.topic === t('Return call')) ?\r\n                        <div className=\"field\">\r\n                            <label className=\"label\" htmlFor=\"telephone\">{t('Telephone')}</label>\r\n                            <div className=\"control\">\r\n                                <input id=\"telephone\"\r\n                                       name=\"telephone\"\r\n                                       type=\"number\"\r\n                                       onBlur={formik.handleBlur}\r\n                                       onChange={formik.handleChange}\r\n                                       value={formik.values.telephone}\r\n                                       className={`input ${formik.touched.telephone && formik.errors.telephone ? 'is-danger' : ''}`}\r\n                                       placeholder={t('Example').concat(\" 123456789\")}/>\r\n                            </div>\r\n                            {formik.touched.telephone && formik.errors.telephone ?\r\n                                <span className=\"help is-danger error-msg\">{formik.errors.telephone}</span> : null}\r\n                        </div>\r\n                        :\r\n                        null\r\n\r\n                    }\r\n\r\n                    {(formik.values.topic === t('Software errors')) ?\r\n                        <div className=\"field\">\r\n                            <label className=\"label\" htmlFor=\"version\">{t('Version')}</label>\r\n                            <div className=\"control\">\r\n                                <input id=\"version\"\r\n                                       name=\"version\"\r\n                                       type=\"text\"\r\n                                       onChange={formik.handleChange}\r\n                                       onBlur={formik.handleBlur}\r\n                                       value={formik.values.version}\r\n                                       className={`input ${formik.touched.version && formik.errors.version ? 'is-danger' : ''}`}\r\n                                       placeholder={t('Example').concat(\" 1.1.1\")}/>\r\n                            </div>\r\n                            {formik.touched.version && formik.errors.version ?\r\n                                <span className=\"help is-danger error-msg\">{formik.errors.version}</span> : null}\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    <div className=\"field textarea-selector\">\r\n                        <label className=\"label\" htmlFor=\"message\">{t('Description')}</label>\r\n                        <div className=\"control\">\r\n                        <textarea style={{resize: 'none'}} id=\"message\"\r\n                                  name=\"message\" onChange={formik.handleChange} value={formik.values.message}\r\n                                  onBlur={formik.handleBlur}\r\n                                  className={`textarea ${formik.touched.message && formik.errors.message ? 'is-danger' : ''}`}\r\n                                  placeholder={t('Description placeholder')}/>\r\n                        </div>\r\n                        {formik.touched.message && formik.errors.message ?\r\n                            <span className=\"help is-danger error-msg\">{formik.errors.message}</span> : null}\r\n                    </div>\r\n\r\n                    <div className=\"field is-grouped\">\r\n                        <div className=\"control\">\r\n                            <button className=\"button is-link\" type=\"submit\">{t(\"Submit\")} <IoMdSend size={16}\r\n                                                                                                     className=\"ml-2\"/>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;","C:\\Users\\PiotrKalucki\\Desktop\\rekrutacja\\f11-form\\src\\i18n.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":40,"column":107,"nodeType":"33","messageId":"34","endLine":40,"endColumn":108,"suggestions":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["38","39"],"no-global-assign","no-unsafe-negation",{"messageId":"40","fix":"41","desc":"42"},{"messageId":"43","fix":"44","desc":"45"},"removeEscape",{"range":"46","text":"47"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"48","text":"49"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1521,1522],"",[1521,1521],"\\"]