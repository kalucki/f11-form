{"version":3,"sources":["components/form.js","i18n.js","App.js","reportWebVitals.js","index.js"],"names":["Form","useTranslation","t","i18n","useState","activeLanguage","setActiveLanguage","onLanguageChange","e","changeLanguage","target","id","then","console","log","formik","resetForm","sentMsgVisible","setSentMsgVisible","useFormik","initialValues","email","name","message","topic","version","telephone","validate","values","errors","test","onSubmit","alert","JSON","stringify","className","onClick","alt","title","src","handleSubmit","action","htmlFor","type","onBlur","handleBlur","onChange","handleChange","value","touched","placeholder","concat","size","setFieldValue","setErrors","customHandleChange","style","resize","use","initReactI18next","init","resources","lng","keySeparator","interpolation","escapeValue","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dcbfaca.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport \"bulma/css/bulma.css\";\r\nimport '../styles/form.scss';\r\nimport {useFormik} from 'formik';\r\nimport {BiEnvelope} from 'react-icons/bi';\r\nimport {IoMdSend, IoMdPerson} from 'react-icons/io';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nconst Form = () => {\r\n    const {t, i18n} = useTranslation();\r\n    const [activeLanguage, setActiveLanguage] = useState('GB');\r\n    const onLanguageChange = (e) => {\r\n        i18n.changeLanguage(e.target.id).then(() => console.log(i18n));\r\n        setActiveLanguage(e.target.id);\r\n        formik.resetForm({});\r\n    }\r\n    const [sentMsgVisible, setSentMsgVisible] = useState(false);\r\n    const handleCloseWindow = () => {\r\n        setSentMsgVisible(!sentMsgVisible);\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.name) {\r\n            errors.name = t('Required');\r\n        }\r\n\r\n        if (!values.message) {\r\n            errors.message = t('Required');\r\n        }\r\n        if (!values.email) {\r\n            errors.email = t('Required');\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n            errors.email = t('Invalid Email');\r\n        }\r\n        if (!values.topic) {\r\n            errors.topic = t('Required');\r\n        }\r\n        if (values.topic === t('Software errors') && !values.version) {\r\n            errors.version = t('Required');\r\n        } else if (values.topic === t('Software errors') && values.version && (!/(?!\\.)(\\d+(\\.\\d+)+)(?![\\d\\.])/g.test(values.version))) {\r\n            errors.version = t('Wrong Format');\r\n        }\r\n        if (values.topic === t('Return call') && !values.telephone) {\r\n            errors.telephone = t('Required');\r\n        }\r\n        if (!values.topic) {\r\n            errors.topic = t('Required');\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            name: '',\r\n            message: '',\r\n            topic: '',\r\n            version: '',\r\n            telephone: ''\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            // Normally onSubmit would be a fetch to an endpoint sending the formular, since there is none specified\r\n            // I'am just showing the payload in an Alert, to show that all the data is correctly sent.\r\n            alert(JSON.stringify(values, null, 2));\r\n            formik.resetForm({});\r\n            setSentMsgVisible(true);\r\n        },\r\n    });\r\n    const customHandleChange = (e) => {\r\n        formik.handleChange(e);\r\n        formik.setFieldValue('version', '')\r\n        formik.setErrors({\"version\": ''})\r\n        formik.setFieldValue('telephone', '')\r\n        formik.setErrors({\"telephone\": ''})\r\n\r\n    }\r\n    return (\r\n        <div className=\"wrapper\">\r\n                <div className=\"flags-container\">\r\n                    <img\r\n                        onClick={(e) => onLanguageChange(e)}\r\n                        id=\"GB\"\r\n                        className={`flag-icon ${activeLanguage === \"GB\" ? \"active-lang\" : \"inactive-lang\"}`}\r\n                        alt=\"English\"\r\n                        title=\"English\"\r\n                        src=\"http://purecatamphetamine.github.io/country-flag-icons/3x2/GB.svg\"/>\r\n                    <img\r\n                        onClick={(e) => onLanguageChange(e)}\r\n                        id=\"DE\"\r\n                        title=\"Deutsch\"\r\n                        className={`flag-icon ${activeLanguage === \"DE\" ? \"active-lang\" : \"inactive-lang\"}`}\r\n                        alt=\"Deutsch\"\r\n                        src=\"http://purecatamphetamine.github.io/country-flag-icons/3x2/DE.svg\"/>\r\n                </div>\r\n            {sentMsgVisible && <div className=\"notification succes-bar is-success\">\r\n                <button onClick={handleCloseWindow} className=\"delete\"></button>\r\n                {t('Request sent')}\r\n            </div>}\r\n            <div className=\"main-form-container\">\r\n                <h1 className=\"title is-bold\">{t('Form')}</h1>\r\n                <span className=\"subtitle support-sub\">{t('Support')}</span>\r\n                <form onSubmit={formik.handleSubmit} className=\"form-wrapper\" action=\"/thanks\">\r\n                    <div className=\"field\">\r\n                        <label className=\"label\" htmlFor=\"name\">{t('Name')}</label>\r\n                        <div className=\"control has-icons-left\">\r\n                            <input id=\"name\"\r\n                                   name=\"name\"\r\n                                   type=\"text\"\r\n                                   onBlur={formik.handleBlur}\r\n                                   onChange={formik.handleChange}\r\n                                   value={formik.values.name}\r\n                                   className={`input ${formik.touched.name && formik.errors.name ? 'is-danger' : ''}`}\r\n                                   placeholder={t('Example').concat(\" John Malkovic\")}/>\r\n                            <span className=\"icon is-small is-left\">\r\n                            <IoMdPerson size={24}/>\r\n                            </span>\r\n                        </div>\r\n                        {formik.touched.name && formik.errors.name ?\r\n                            <span className=\"help is-danger error-msg\">{formik.errors.name}</span> : null}\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label className=\"label\" htmlFor=\"email\">{t('Email')}</label>\r\n                        <div className=\"control has-icons-left\">\r\n                            <input id=\"email\"\r\n                                   name=\"email\"\r\n                                   type=\"email\"\r\n                                   className={`input ${formik.touched.email && formik.errors.email ? 'is-danger' : ''}`}\r\n                                   placeholder={t('Example').concat(\" john@malkovic.com\")}\r\n                                   onBlur={formik.handleBlur}\r\n                                   onChange={formik.handleChange}\r\n                                   value={formik.values.email}/>\r\n                            <span className=\"icon is-small is-left\">\r\n                            <BiEnvelope size={24}/>\r\n                        </span>\r\n                        </div>\r\n                        {formik.touched.email && formik.errors.email ?\r\n                            <span className=\"help is-danger error-msg\">{formik.errors.email}</span> : null}\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label className=\"label\" htmlFor=\"topic\">{t('Topic')}</label>\r\n                        <div className=\"control\">\r\n                            <div className={`select ${formik.touched.topic && formik.errors.topic ? 'is-danger' : ''}`}>\r\n                                <select name=\"topic\"\r\n                                        value={formik.values.topic}\r\n                                        onChange={(e) => customHandleChange(e)}\r\n                                        onBlur={formik.handleBlur}\r\n                                >\r\n                                    <option value=\"\">{t('Choose Topic')}</option>\r\n                                    <option>{t('Software errors')}</option>\r\n                                    <option>{t('General')}</option>\r\n                                    <option>{t('Return call')}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        {formik.touched.topic && formik.errors.topic ?\r\n                            <span className=\"help is-danger error-msg\">{formik.errors.topic}</span> : null}\r\n                    </div>\r\n\r\n\r\n                    {(formik.values.topic === t('Return call')) ?\r\n                        <div className=\"field\">\r\n                            <label className=\"label\" htmlFor=\"telephone\">{t('Telephone')}</label>\r\n                            <div className=\"control\">\r\n                                <input id=\"telephone\"\r\n                                       name=\"telephone\"\r\n                                       type=\"number\"\r\n                                       onBlur={formik.handleBlur}\r\n                                       onChange={formik.handleChange}\r\n                                       value={formik.values.telephone}\r\n                                       className={`input ${formik.touched.telephone && formik.errors.telephone ? 'is-danger' : ''}`}\r\n                                       placeholder={t('Example').concat(\" 123456789\")}/>\r\n                            </div>\r\n                            {formik.touched.telephone && formik.errors.telephone ?\r\n                                <span className=\"help is-danger error-msg\">{formik.errors.telephone}</span> : null}\r\n                        </div>\r\n                        :\r\n                        null\r\n\r\n                    }\r\n\r\n                    {(formik.values.topic === t('Software errors')) ?\r\n                        <div className=\"field\">\r\n                            <label className=\"label\" htmlFor=\"version\">{t('Version')}</label>\r\n                            <div className=\"control\">\r\n                                <input id=\"version\"\r\n                                       name=\"version\"\r\n                                       type=\"text\"\r\n                                       onChange={formik.handleChange}\r\n                                       onBlur={formik.handleBlur}\r\n                                       value={formik.values.version}\r\n                                       className={`input ${formik.touched.version && formik.errors.version ? 'is-danger' : ''}`}\r\n                                       placeholder={t('Example').concat(\" 1.1.1\")}/>\r\n                            </div>\r\n                            {formik.touched.version && formik.errors.version ?\r\n                                <span className=\"help is-danger error-msg\">{formik.errors.version}</span> : null}\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    <div className=\"field textarea-selector\">\r\n                        <label className=\"label\" htmlFor=\"message\">{t('Description')}</label>\r\n                        <div className=\"control\">\r\n                        <textarea style={{resize: 'none'}} id=\"message\"\r\n                                  name=\"message\" onChange={formik.handleChange} value={formik.values.message}\r\n                                  onBlur={formik.handleBlur}\r\n                                  className={`textarea ${formik.touched.message && formik.errors.message ? 'is-danger' : ''}`}\r\n                                  placeholder={t('Description placeholder')}/>\r\n                        </div>\r\n                        {formik.touched.message && formik.errors.message ?\r\n                            <span className=\"help is-danger error-msg\">{formik.errors.message}</span> : null}\r\n                    </div>\r\n\r\n                    <div className=\"field is-grouped\">\r\n                        <div className=\"control\">\r\n                            <button className=\"button is-link\" type=\"submit\">{t(\"Submit\")} <IoMdSend size={16}\r\n                                                                                                     className=\"ml-2\"/>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport resources from './translations.json';\r\n\r\ni18n\r\n    .use(initReactI18next) // passes i18n down to react-i18next\r\n    .init({\r\n        resources,\r\n        lng: \"GB\",\r\n        keySeparator: false,\r\n        interpolation: {\r\n            escapeValue: false // react already safes from xss\r\n        }\r\n    });\r\n\r\nexport default i18n;","import React from 'react';\nimport Form from \"./components/form\";\nimport \"bulma/css/bulma.css\";\nimport \"./styles/main.scss\";\nimport './i18n';\n\nfunction App() {\n  return (\n    <div className=\"root-container\">\n       <Form/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}